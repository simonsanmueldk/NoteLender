@page "/Register"
@using Sep3Blazor.Model
@using Sep3Blazor.Data.UserData
@using Sep3Blazor.Data.Notifications.NotificationModel
@using Sep3Blazor.Data.Notifications
@inject IUserService _userService
@inject NavigationManager _navigationManager
@inject NotificationManager _notificationManager


<EditForm Model="@user" OnValidSubmit="@RegisterUser">
    <DataAnnotationsValidator/>
    <br/>
    <div class="d-flex justify-content-center">
        <aside class="col-sm-4 " style="alignment: center">
            <div class="card">
                <article class="card-body">
                    <header class="card-header">
                        <h4 class="card-title text-center mt-2">Create account</h4>
                    </header>
                    <br/>
                    <div class="d-flex flex-column align-items-center">
                        <div class="form-group">
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <span class="input-group-text h-100">
                                        <i class="far fa-user-circle iconClass"></i>
                                    </span>
                                </div>
                                <InputText class="form-control" type="text" placeholder="First Name" @bind-Value="user.firstName"/>
                            </div> <!-- input-group.// -->
                        </div> <!-- form-group// -->
                        <div class="form-group">
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <span class="input-group-text h-100">
                                        <i class="far fa-user-circle iconClass"></i>
                                    </span>
                                </div>
                                <InputText class="form-control" type="text" placeholder="Last Name" @bind-Value="user.lastName"/>
                            </div> <!-- input-group.// -->
                        </div> <!-- form-group// -->
                        <div class="form-group">
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <span class="input-group-text h-100">
                                        <i class="far fa-user iconClass"></i>
                                    </span>
                                </div>
                                <InputText class="form-control" type="text" placeholder="Username" @bind-Value="user.username"/>
                            </div> <!-- input-group.// -->
                        </div> <!-- form-group// -->

                        <div class="form-group">
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <span class="input-group-text h-100">
                                        <i class="fas fa-lock iconClass"></i>
                                    </span>
                                </div>
                                <InputText class="form-control" type="password" placeholder="Password" @bind-Value="user.password"/>
                               
                            </div> <!-- input-group.// -->
                        </div> <!-- form-group// -->
                        <div class="d-flex flex-row align-items-center justify-content-between">
                            <ValidationMessage For="@(() => user.password)" />
                        </div>
                         
                        <div class="form-group">
                            <button class="btn btn-primary btn-block" type="submit">Create account</button>
                        </div>
                        <p class="text-center">Have an account? <a href="#" @onclick="Back">Log In</a> </p>
                    </div>
                </article>
            </div>
        </aside>
    </div>
</EditForm>


@code {
    //Instance variables sets user to null
    private User user = new User(0, "", "", "", "");

    //Method to register user, using UserService
    private async Task RegisterUser()
    {
        Notification notification = await _userService.RegisterUser(user);
        if (notification.Title.Equals("Success"))
        {
            _navigationManager.NavigateTo("/");
        }
        else
        {
            user = new User(0, "", "", "", "");
        }
         _notificationManager.Show(notification);
    }

    //Method to go back to the index page
    private void Back()
    {
        _navigationManager.NavigateTo("/");
    }

}